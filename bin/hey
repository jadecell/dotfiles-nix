#!/bin/sh
set -eu

# colors
BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
GRAY='\033[0;37m'
LIGHTBLACK='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
LIGHTYELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTMAGENTA='\033[1;35m'
LIGHTCYAN='\033[1;36m'
LIGHTGRAY='\033[1;37m'
NC='\033[0m'

# Set the hostname
hostname="$(hostname)"

print() {
  printf "\n[+] ${GREEN}${1}${NC}\n\n"
}

error() {
  printf "\n[-] ${RED}${1}${NC}\n\n" && exit 1  
}

# No arguments
if [ $# -eq 0 ]; then
  error "Please supply an argument"
fi

updateoption="off"
switchoption="off"
rollbackoption="off"
searchoption="off"
case "$1" in
  "update") updateoption="on"
  ;;
  "switch") switchoption="on"
  ;;
  "rollback") rollbackoption="on"
  ;;
  "search") searchoption="on" && [ $# -eq 1 ] && error "Please provide a search term"
  ;;
  *) error "Invalid option"
  ;;
esac

cd "$NIXOS_CONFIG_DIR"

if [ "$updateoption" = "on" ]; then
  sudo nix flake update
  sudo nixos-rebuild switch --flake .#$hostname
  print "Successfully updated system!"
  exit 0
fi

if [ "$switchoption" = "on" ]; then
  sudo nixos-rebuild switch --flake .#$hostname
  print "Successfully switched system!"
  exit 0
fi

if [ "$searchoption" = "on" ]; then
    nix search nixpkgs $2
fi

if [ "$rollbackoption" = "on" ]; then

    nix-env --rollback --dry-run

    printf "Would you like to continue [y/N]? "
    read -r ROLLBACKCONTINUE

    case $ROLLBACKCONTINUE in
    Y | y)
        SWITCHROLLBACKCONTINUE=true
        ;;
    N | n)
        SWITCHROLLBACKCONTINUE=false
        ;;
    "")
        SWITCHROLLBACKCONTINUE=false
        ;;
    *)
        echo "Invalid option"
        exit 1
        ;;
    esac

    $SWITCHROLLBACKCONTINUE && nix-env --rollback 
    print "Successfully rolled back!"

fi
